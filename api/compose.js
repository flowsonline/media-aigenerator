export default async function handler(req,res){ try { 
if(req.method!=='POST') return res.status(405).json({error:'Method not allowed'});
const { industry='general', goal='awareness', tone='friendly', platform='Instagram Reel 9:16', description='' } = req.body||{};
function safe(){ const words=(description||'').split(/\W+/).filter(Boolean).slice(0,10); const tags=words.map(w=>('#'+w.toLowerCase())).slice(0,6); return { headline:'Unleash Your Potential with FLOWS ALPHA!', caption:(description||'').slice(0,240), hashtags:tags, script:'Unlock your creativity with FLOWS ALPHA. Easy-to-use AI tools for everyone. Transform your work today!' }; }
try{ const OpenAI=(await import('openai')).default; const client = new OpenAI({ apiKey: process.env.OPENAI_API_KEY }); const r = await client.responses.create({ model:'gpt-4o-mini', input:[{role:'system',content:'Return strict JSON only.'},{role:'user',content:`Create short social copy as JSON with keys headline, caption, hashtags (array 6 items, lowercase, no #), script (60-80 words) based on: industry=${industry}, goal=${goal}, tone=${tone}, platform=${platform}, description=${description}`}], response_format:{type:'json_object'}, temperature:0.7, max_output_tokens:700 }); let out; try{ out = JSON.parse(r.output_text||'{}'); } catch { out=null; } if(!out||!out.headline) return res.status(200).json(safe()); return res.status(200).json({ headline:String(out.headline).slice(0,60), caption:String(out.caption||'').slice(0,240), hashtags:(out.hashtags||[]).map(x=>'#'+String(x).replace(/#/g,'').toLowerCase()).slice(0,8), script:String(out.script||'').slice(0,500) }); } catch(e){ return res.status(200).json(safe()); }
 } catch(e){ console.error(e); if(!res.headersSent) res.status(200).json({ error: e?.message || 'Unexpected error' }); } }